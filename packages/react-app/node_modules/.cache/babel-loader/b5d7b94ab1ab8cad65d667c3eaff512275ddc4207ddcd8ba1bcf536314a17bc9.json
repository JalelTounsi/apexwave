{"ast":null,"code":"export function subscribeToNewBlock(provider, chainId, dispatch, isActive) {\n  if (provider && chainId !== undefined && isActive) {\n    const update = blockNumber => dispatch({\n      chainId,\n      blockNumber\n    });\n    provider.on('block', update);\n    provider.getBlockNumber().then(blockNumber => update(blockNumber), err => {\n      console.error(err);\n    });\n    return () => {\n      provider.off('block', update);\n    };\n  }\n  return () => undefined;\n}","map":{"version":3,"mappings":"AAKA,OAAM,SAAUA,mBAAmB,CACjCC,QAA4C,EAC5CC,OAA4B,EAC5BC,QAAsC,EACtCC,QAAiB;EAEjB,IAAIH,QAAQ,IAAIC,OAAO,KAAKG,SAAS,IAAID,QAAQ,EAAE;IACjD,MAAME,MAAM,GAAIC,WAAmB,IAAKJ,QAAQ,CAAC;MAAED,OAAO;MAAEK;IAAW,CAAE,CAAC;IAC1EN,QAAQ,CAACO,EAAE,CAAC,OAAO,EAAEF,MAAM,CAAC;IAE5BL,QAAQ,CAACQ,cAAc,EAAE,CAACC,IAAI,CAC3BH,WAAW,IAAKD,MAAM,CAACC,WAAW,CAAC,EACnCI,GAAG,IAAI;MACNC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB,CAAC,CACF;IAED,OAAO,MAAK;MACVV,QAAQ,CAACa,GAAG,CAAC,OAAO,EAAER,MAAM,CAAC;IAC/B,CAAC;;EAGH,OAAO,MAAMD,SAAS;AACxB","names":["subscribeToNewBlock","provider","chainId","dispatch","isActive","undefined","update","blockNumber","on","getBlockNumber","then","err","console","error","off"],"sources":["/Users/jaleltounsi/Documents/GitHub/apexwave.fi/apexwave/node_modules/@usedapp/core/src/providers/blockNumber/common/subscribeToNewBlock.ts"],"sourcesContent":["import { providers } from 'ethers'\nimport { ChainId } from '../../../constants'\nimport { Dispatch } from 'react'\nimport { BlockNumberChanged } from './reducer'\n\nexport function subscribeToNewBlock(\n  provider: providers.BaseProvider | undefined,\n  chainId: ChainId | undefined,\n  dispatch: Dispatch<BlockNumberChanged>,\n  isActive: boolean\n) {\n  if (provider && chainId !== undefined && isActive) {\n    const update = (blockNumber: number) => dispatch({ chainId, blockNumber })\n    provider.on('block', update)\n\n    provider.getBlockNumber().then(\n      (blockNumber) => update(blockNumber),\n      (err) => {\n        console.error(err)\n      }\n    )\n\n    return () => {\n      provider.off('block', update)\n    }\n  }\n\n  return () => undefined\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}