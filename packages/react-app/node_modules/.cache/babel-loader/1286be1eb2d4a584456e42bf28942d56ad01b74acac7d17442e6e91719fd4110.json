{"ast":null,"code":"import { getAddressLink, getTransactionLink } from '../../helpers/chainExplorerLink';\nconst etherscanUrl = 'https://etherscan.io';\nconst ropstenEtherscanUrl = 'https://ropsten.etherscan.io';\nconst rinkebyEtherscanUrl = 'https://rinkeby.etherscan.io';\nconst goerliEtherscanUrl = 'https://goerli.etherscan.io';\nconst kovanEtherscanUrl = 'https://kovan.etherscan.io';\nconst sepoliaEtherscanUrl = 'https://sepolia.etherscan.io';\nexport const Mainnet = {\n  chainId: 1,\n  chainName: 'Mainnet',\n  isTestChain: false,\n  isLocalChain: false,\n  multicallAddress: '0xeefba1e63905ef1d7acba5a8513c70307c1ce441',\n  multicall2Address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  blockExplorerUrl: etherscanUrl,\n  getExplorerAddressLink: getAddressLink(etherscanUrl),\n  getExplorerTransactionLink: getTransactionLink(etherscanUrl)\n};\nexport const Ropsten = {\n  chainId: 3,\n  chainName: 'Ropsten',\n  isTestChain: true,\n  isLocalChain: false,\n  multicallAddress: '0x53c43764255c17bd724f74c4ef150724ac50a3ed',\n  multicall2Address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696',\n  nativeCurrency: {\n    name: 'Ropsten Ether',\n    symbol: 'RopstenETH',\n    decimals: 18\n  },\n  blockExplorerUrl: ropstenEtherscanUrl,\n  getExplorerAddressLink: getAddressLink(ropstenEtherscanUrl),\n  getExplorerTransactionLink: getTransactionLink(ropstenEtherscanUrl)\n};\nexport const Rinkeby = {\n  chainId: 4,\n  chainName: 'Rinkeby',\n  isTestChain: true,\n  isLocalChain: false,\n  multicallAddress: '0x42ad527de7d4e9d9d011ac45b31d8551f8fe9821',\n  multicall2Address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696',\n  blockExplorerUrl: rinkebyEtherscanUrl,\n  nativeCurrency: {\n    name: 'Rinkeby Ether',\n    symbol: 'RinkebyETH',\n    decimals: 18\n  },\n  getExplorerAddressLink: getAddressLink(rinkebyEtherscanUrl),\n  getExplorerTransactionLink: getTransactionLink(rinkebyEtherscanUrl)\n};\nexport const Goerli = {\n  chainId: 5,\n  chainName: 'Goerli',\n  isTestChain: true,\n  isLocalChain: false,\n  multicallAddress: '0x77dca2c955b15e9de4dbbcf1246b4b85b651e50e',\n  multicall2Address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696',\n  blockExplorerUrl: goerliEtherscanUrl,\n  nativeCurrency: {\n    name: 'Goerli Ether',\n    symbol: 'GoerliETH',\n    decimals: 18\n  },\n  getExplorerAddressLink: getAddressLink(goerliEtherscanUrl),\n  getExplorerTransactionLink: getTransactionLink(goerliEtherscanUrl)\n};\nexport const Kovan = {\n  chainId: 42,\n  chainName: 'Kovan',\n  isTestChain: true,\n  isLocalChain: false,\n  multicallAddress: '0x2cc8688c5f75e365aaeeb4ea8d6a480405a48d2a',\n  multicall2Address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696',\n  blockExplorerUrl: kovanEtherscanUrl,\n  nativeCurrency: {\n    name: 'Kovan Ether',\n    symbol: 'KovanETH',\n    decimals: 18\n  },\n  getExplorerAddressLink: getAddressLink(kovanEtherscanUrl),\n  getExplorerTransactionLink: getTransactionLink(kovanEtherscanUrl)\n};\nexport const Sepolia = {\n  chainId: 11155111,\n  chainName: 'Sepolia',\n  isTestChain: true,\n  isLocalChain: false,\n  multicallAddress: '0x6a19Dbfc67233760E0fF235b29158bE45Cc53765',\n  multicall2Address: '0xeFd9FF5a8cea47Cd6a6B1b2c3f21aC9475265A21',\n  rpcUrl: 'https://rpc.sepolia.org',\n  blockExplorerUrl: sepoliaEtherscanUrl,\n  nativeCurrency: {\n    name: 'Sepolia Ether',\n    symbol: 'SepoliaETH',\n    decimals: 18\n  },\n  getExplorerAddressLink: getAddressLink(sepoliaEtherscanUrl),\n  getExplorerTransactionLink: getTransactionLink(sepoliaEtherscanUrl)\n};\nexport default {\n  Mainnet,\n  Ropsten,\n  Rinkeby,\n  Goerli,\n  Kovan,\n  Sepolia\n};","map":{"version":3,"mappings":"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","names":["getAddressLink","getTransactionLink","etherscanUrl","ropstenEtherscanUrl","rinkebyEtherscanUrl","goerliEtherscanUrl","kovanEtherscanUrl","sepoliaEtherscanUrl","Mainnet","chainId","chainName","isTestChain","isLocalChain","multicallAddress","multicall2Address","nativeCurrency","name","symbol","decimals","blockExplorerUrl","getExplorerAddressLink","getExplorerTransactionLink","Ropsten","Rinkeby","Goerli","Kovan","Sepolia","rpcUrl"],"sources":["/Users/jaleltounsi/Documents/GitHub/apexwave.fi/apexwave/node_modules/@usedapp/core/src/model/chain/ethereum.ts"],"sourcesContent":["import { Chain } from '../../constants'\nimport { getAddressLink, getTransactionLink } from '../../helpers/chainExplorerLink'\n\nconst etherscanUrl = 'https://etherscan.io'\nconst ropstenEtherscanUrl = 'https://ropsten.etherscan.io'\nconst rinkebyEtherscanUrl = 'https://rinkeby.etherscan.io'\nconst goerliEtherscanUrl = 'https://goerli.etherscan.io'\nconst kovanEtherscanUrl = 'https://kovan.etherscan.io'\nconst sepoliaEtherscanUrl = 'https://sepolia.etherscan.io'\n\nexport const Mainnet: Chain = {\n  chainId: 1,\n  chainName: 'Mainnet',\n  isTestChain: false,\n  isLocalChain: false,\n  multicallAddress: '0xeefba1e63905ef1d7acba5a8513c70307c1ce441',\n  multicall2Address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18,\n  },\n  blockExplorerUrl: etherscanUrl,\n  getExplorerAddressLink: getAddressLink(etherscanUrl),\n  getExplorerTransactionLink: getTransactionLink(etherscanUrl),\n}\n\nexport const Ropsten: Chain = {\n  chainId: 3,\n  chainName: 'Ropsten',\n  isTestChain: true,\n  isLocalChain: false,\n  multicallAddress: '0x53c43764255c17bd724f74c4ef150724ac50a3ed',\n  multicall2Address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696',\n  nativeCurrency: {\n    name: 'Ropsten Ether',\n    symbol: 'RopstenETH',\n    decimals: 18,\n  },\n  blockExplorerUrl: ropstenEtherscanUrl,\n  getExplorerAddressLink: getAddressLink(ropstenEtherscanUrl),\n  getExplorerTransactionLink: getTransactionLink(ropstenEtherscanUrl),\n}\n\nexport const Rinkeby: Chain = {\n  chainId: 4,\n  chainName: 'Rinkeby',\n  isTestChain: true,\n  isLocalChain: false,\n  multicallAddress: '0x42ad527de7d4e9d9d011ac45b31d8551f8fe9821',\n  multicall2Address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696',\n  blockExplorerUrl: rinkebyEtherscanUrl,\n  nativeCurrency: {\n    name: 'Rinkeby Ether',\n    symbol: 'RinkebyETH',\n    decimals: 18,\n  },\n  getExplorerAddressLink: getAddressLink(rinkebyEtherscanUrl),\n  getExplorerTransactionLink: getTransactionLink(rinkebyEtherscanUrl),\n}\n\nexport const Goerli: Chain = {\n  chainId: 5,\n  chainName: 'Goerli',\n  isTestChain: true,\n  isLocalChain: false,\n  multicallAddress: '0x77dca2c955b15e9de4dbbcf1246b4b85b651e50e',\n  multicall2Address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696',\n  blockExplorerUrl: goerliEtherscanUrl,\n  nativeCurrency: {\n    name: 'Goerli Ether',\n    symbol: 'GoerliETH',\n    decimals: 18,\n  },\n  getExplorerAddressLink: getAddressLink(goerliEtherscanUrl),\n  getExplorerTransactionLink: getTransactionLink(goerliEtherscanUrl),\n}\n\nexport const Kovan: Chain = {\n  chainId: 42,\n  chainName: 'Kovan',\n  isTestChain: true,\n  isLocalChain: false,\n  multicallAddress: '0x2cc8688c5f75e365aaeeb4ea8d6a480405a48d2a',\n  multicall2Address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696',\n  blockExplorerUrl: kovanEtherscanUrl,\n  nativeCurrency: {\n    name: 'Kovan Ether',\n    symbol: 'KovanETH',\n    decimals: 18,\n  },\n  getExplorerAddressLink: getAddressLink(kovanEtherscanUrl),\n  getExplorerTransactionLink: getTransactionLink(kovanEtherscanUrl),\n}\n\nexport const Sepolia: Chain = {\n  chainId: 11155111,\n  chainName: 'Sepolia',\n  isTestChain: true,\n  isLocalChain: false,\n  multicallAddress: '0x6a19Dbfc67233760E0fF235b29158bE45Cc53765',\n  multicall2Address: '0xeFd9FF5a8cea47Cd6a6B1b2c3f21aC9475265A21',\n  rpcUrl: 'https://rpc.sepolia.org',\n  blockExplorerUrl: sepoliaEtherscanUrl,\n  nativeCurrency: {\n    name: 'Sepolia Ether',\n    symbol: 'SepoliaETH',\n    decimals: 18,\n  },\n  getExplorerAddressLink: getAddressLink(sepoliaEtherscanUrl),\n  getExplorerTransactionLink: getTransactionLink(sepoliaEtherscanUrl),\n}\n\nexport default {\n  Mainnet,\n  Ropsten,\n  Rinkeby,\n  Goerli,\n  Kovan,\n  Sepolia,\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}