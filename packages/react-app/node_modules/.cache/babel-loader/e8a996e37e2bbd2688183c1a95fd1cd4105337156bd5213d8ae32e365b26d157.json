{"ast":null,"code":"export function subscribeToProviderEvents(connector, onUpdate, onDisconnectListener) {\n  const provider = connector.provider.provider;\n  if (provider === null || provider === void 0 ? void 0 : provider.on) {\n    const onConnectListener = () => {\n      void connector.activate();\n    };\n    provider.on('connect', onConnectListener);\n    provider.on('disconnect', onDisconnectListener);\n    const onChainChangedListener = chainId => {\n      onUpdate({\n        chainId: parseInt(chainId)\n      });\n    };\n    provider.on('chainChanged', onChainChangedListener);\n    const onAccountsChangedListener = accounts => {\n      onUpdate({\n        accounts\n      });\n    };\n    provider.on('accountsChanged', onAccountsChangedListener);\n    return () => {\n      provider.removeListener('connect', onConnectListener);\n      provider.removeListener('disconnect', onDisconnectListener);\n      provider.removeListener('chainChanged', onChainChangedListener);\n      provider.removeListener('accountsChanged', onAccountsChangedListener);\n    };\n  }\n  return () => undefined;\n}","map":{"version":3,"mappings":"AAGA,OAAM,SAAUA,yBAAyB,CACvCC,SAAoB,EACpBC,QAAwD,EACxDC,oBAAgC;EAEhC,MAAMC,QAAQ,GAA8BH,SAAS,CAACG,QAAgB,CAACA,QAAQ;EAC/E,IAAIA,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,EAAE,EAAE;IAChB,MAAMC,iBAAiB,GAAG,MAAW;MACnC,KAAKL,SAAS,CAACM,QAAQ,EAAE;IAC3B,CAAC;IACDH,QAAQ,CAACC,EAAE,CAAC,SAAS,EAAEC,iBAAiB,CAAC;IAEzCF,QAAQ,CAACC,EAAE,CAAC,YAAY,EAAEF,oBAAoB,CAAC;IAE/C,MAAMK,sBAAsB,GAAIC,OAAe,IAAU;MACvDP,QAAQ,CAAC;QAAEO,OAAO,EAAEC,QAAQ,CAACD,OAAO;MAAC,CAAE,CAAC;IAC1C,CAAC;IACDL,QAAQ,CAACC,EAAE,CAAC,cAAc,EAAEG,sBAAsB,CAAC;IAEnD,MAAMG,yBAAyB,GAAIC,QAAkB,IAAU;MAC7DV,QAAQ,CAAC;QAAEU;MAAQ,CAAE,CAAC;IACxB,CAAC;IACDR,QAAQ,CAACC,EAAE,CAAC,iBAAiB,EAAEM,yBAAyB,CAAC;IAEzD,OAAO,MAAK;MACVP,QAAQ,CAACS,cAAc,CAAC,SAAS,EAAEP,iBAAiB,CAAC;MACrDF,QAAQ,CAACS,cAAc,CAAC,YAAY,EAAEV,oBAAoB,CAAC;MAC3DC,QAAQ,CAACS,cAAc,CAAC,cAAc,EAAEL,sBAAsB,CAAC;MAC/DJ,QAAQ,CAACS,cAAc,CAAC,iBAAiB,EAAEF,yBAAyB,CAAC;IACvE,CAAC;;EAGH,OAAO,MAAMG,SAAS;AACxB","names":["subscribeToProviderEvents","connector","onUpdate","onDisconnectListener","provider","on","onConnectListener","activate","onChainChangedListener","chainId","parseInt","onAccountsChangedListener","accounts","removeListener","undefined"],"sources":["/Users/jaleltounsi/Documents/GitHub/apexwave.fi/apexwave/node_modules/@usedapp/core/src/helpers/eip1193.ts"],"sourcesContent":["import { EventEmitter } from 'events'\nimport { Connector, ConnectorUpdateData } from '../providers/network/connectors'\n\nexport function subscribeToProviderEvents(\n  connector: Connector,\n  onUpdate: (update: Partial<ConnectorUpdateData>) => void,\n  onDisconnectListener: () => void\n) {\n  const provider: EventEmitter | undefined = (connector.provider as any).provider\n  if (provider?.on) {\n    const onConnectListener = (): void => {\n      void connector.activate()\n    }\n    provider.on('connect', onConnectListener)\n\n    provider.on('disconnect', onDisconnectListener)\n\n    const onChainChangedListener = (chainId: string): void => {\n      onUpdate({ chainId: parseInt(chainId) })\n    }\n    provider.on('chainChanged', onChainChangedListener)\n\n    const onAccountsChangedListener = (accounts: string[]): void => {\n      onUpdate({ accounts })\n    }\n    provider.on('accountsChanged', onAccountsChangedListener)\n\n    return () => {\n      provider.removeListener('connect', onConnectListener)\n      provider.removeListener('disconnect', onDisconnectListener)\n      provider.removeListener('chainChanged', onChainChangedListener)\n      provider.removeListener('accountsChanged', onAccountsChangedListener)\n    }\n  }\n\n  return () => undefined\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}