{"ast":null,"code":"export function transactionReducer(state, action) {\n  var _a, _b;\n  switch (action.type) {\n    case 'ADD_TRANSACTION':\n      {\n        const {\n          chainId\n        } = action.payload.transaction;\n        return Object.assign(Object.assign({}, state), {\n          [chainId]: [action.payload, ...((_a = state[chainId]) !== null && _a !== void 0 ? _a : [])]\n        });\n      }\n    case 'UPDATE_TRANSACTION':\n      {\n        const {\n          chainId,\n          hash\n        } = action.payload.transaction;\n        return Object.assign(Object.assign({}, state), {\n          [chainId]: ((_b = state[chainId]) !== null && _b !== void 0 ? _b : []).map(tx => tx.transaction.hash === hash ? Object.assign(Object.assign({}, tx), action.payload) : tx)\n        });\n      }\n    case 'UPDATE_TRANSACTIONS':\n      return Object.assign(Object.assign({}, state), {\n        [action.chainId]: [...action.transactions]\n      });\n  }\n}","map":{"version":3,"mappings":"AAkBA,OAAM,SAAUA,kBAAkB,CAACC,KAAyB,EAAEC,MAAc;;EAC1E,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,iBAAiB;MAAE;QACtB,MAAM;UAAEC;QAAO,CAAE,GAAGF,MAAM,CAACG,OAAO,CAACC,WAAW;QAC9C,uCACKL,KAAK;UACR,CAACG,OAAO,GAAG,CAACF,MAAM,CAACG,OAAO,EAAE,IAAI,WAAK,CAACD,OAAO,CAAC,mCAAI,EAAE,CAAC;QAAC;;IAG1D,KAAK,oBAAoB;MAAE;QACzB,MAAM;UAAEA,OAAO;UAAEG;QAAI,CAAE,GAAGL,MAAM,CAACG,OAAO,CAACC,WAAW;QACpD,uCACKL,KAAK;UACR,CAACG,OAAO,GAAG,CAAC,WAAK,CAACA,OAAO,CAAC,mCAAI,EAAE,EAAEI,GAAG,CAAEC,EAAE,IACvCA,EAAE,CAACH,WAAW,CAACC,IAAI,KAAKA,IAAI,GAAEG,gCAAMD,EAAE,GAAKP,MAAM,CAACG,OAAO,IAAKI,EAAE;QACjE;;IAGL,KAAK,qBAAqB;MACxB,uCAAYR,KAAK;QAAE,CAACC,MAAM,CAACE,OAAO,GAAG,CAAC,GAAGF,MAAM,CAACS,YAAY;MAAC;EAAE;AAErE","names":["transactionReducer","state","action","type","chainId","payload","transaction","hash","map","tx","Object","transactions"],"sources":["/Users/jaleltounsi/Documents/GitHub/apexwave.fi/apexwave/node_modules/@usedapp/core/src/providers/transactions/reducer.ts"],"sourcesContent":["import { StoredTransaction, StoredTransactions, UpdatedTransaction } from './model'\n\ntype Action = AddTransaction | UpdateTransaction | UpdateTransactions\n\ninterface AddTransaction {\n  type: 'ADD_TRANSACTION'\n  payload: StoredTransaction\n}\ninterface UpdateTransaction {\n  type: 'UPDATE_TRANSACTION'\n  payload: UpdatedTransaction\n}\ninterface UpdateTransactions {\n  type: 'UPDATE_TRANSACTIONS'\n  chainId: number\n  transactions: StoredTransaction[]\n}\n\nexport function transactionReducer(state: StoredTransactions, action: Action): StoredTransactions {\n  switch (action.type) {\n    case 'ADD_TRANSACTION': {\n      const { chainId } = action.payload.transaction\n      return {\n        ...state,\n        [chainId]: [action.payload, ...(state[chainId] ?? [])],\n      }\n    }\n    case 'UPDATE_TRANSACTION': {\n      const { chainId, hash } = action.payload.transaction\n      return {\n        ...state,\n        [chainId]: (state[chainId] ?? []).map((tx) =>\n          tx.transaction.hash === hash ? { ...tx, ...action.payload } : tx\n        ),\n      }\n    }\n    case 'UPDATE_TRANSACTIONS':\n      return { ...state, [action.chainId]: [...action.transactions] }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}