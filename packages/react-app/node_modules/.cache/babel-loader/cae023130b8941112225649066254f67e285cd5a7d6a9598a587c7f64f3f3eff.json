{"ast":null,"code":"// number of bytes in the hext string - '0x' at the start doesn't count\n// each two characters are one byte\nexport const buffLength = buf => (buf.length - 2) / 2;\n// length of the buffer padded to the nearest 32 bytes\nexport const bufPaddedLength = buf => Math.ceil(buffLength(buf) / 32) * 32;\nexport const encodeUint = uint => uint.toString(16).padStart(64, '0');\nexport const decodeUint = buf => parseInt(buf, 16);\n// word length in characters - 32 bytes = 64 characters\nexport const wordLength = 64;\nexport const fail = () => {\n  throw new Error('Invalid calldata');\n};","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAO,MAAMA,UAAU,GAAIC,GAAW,IAAK,CAACA,GAAG,CAACC,MAAM,GAAG,CAAC,IAAI,CAAC;AAC/D;AACA,OAAO,MAAMC,eAAe,GAAIF,GAAW,IAAKG,IAAI,CAACC,IAAI,CAACL,UAAU,CAACC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE;AACpF,OAAO,MAAMK,UAAU,GAAIC,IAAY,IAAKA,IAAI,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC;AAC/E,OAAO,MAAMC,UAAU,GAAIT,GAAW,IAAKU,QAAQ,CAACV,GAAG,EAAE,EAAE,CAAC;AAC5D;AACA,OAAO,MAAMW,UAAU,GAAG,EAAE;AAC5B,OAAO,MAAMC,IAAI,GAAG,MAAK;EACvB,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;AACrC,CAAC","names":["buffLength","buf","length","bufPaddedLength","Math","ceil","encodeUint","uint","toString","padStart","decodeUint","parseInt","wordLength","fail","Error"],"sources":["/Users/jaleltounsi/Documents/GitHub/apexwave.fi/apexwave/node_modules/@usedapp/core/src/abi/common.ts"],"sourcesContent":["// number of bytes in the hext string - '0x' at the start doesn't count\n// each two characters are one byte\nexport const buffLength = (buf: string) => (buf.length - 2) / 2\n// length of the buffer padded to the nearest 32 bytes\nexport const bufPaddedLength = (buf: string) => Math.ceil(buffLength(buf) / 32) * 32\nexport const encodeUint = (uint: number) => uint.toString(16).padStart(64, '0')\nexport const decodeUint = (buf: string) => parseInt(buf, 16)\n// word length in characters - 32 bytes = 64 characters\nexport const wordLength = 64\nexport const fail = () => {\n  throw new Error('Invalid calldata')\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}